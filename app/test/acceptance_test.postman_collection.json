{
    "info": {
        "_postman_id": "137e036b-92be-4678-be7b-a2a318a6a092",
        "name": "acceptance_test",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "Projects API",
            "item": [
                {
                    "name": "Get Access Token For Test Client",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "e3d45f97-8506-4f4f-8535-2cf531bde0de",
                                "exec": [
                                    "pm.environment.set(\"access_token\", pm.response.json()[\"access_token\"]);"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"client_id\":\"xo509wTObnqcYKiOgLCJoLcHqSpFKCjL\",\"client_secret\":\"O9WUmL1WtKRJ35TByGcrcoau0tNE9m5Yd1SC4x4V9VzQoRX4c1XUBhO6BBPYmc5B\",\"audience\":\"http://www.grizzlybear-experiments.com\",\"grant_type\":\"client_credentials\"}"
                        },
                        "url": {
                            "raw": "https://auth.elecular.com/oauth/token",
                            "protocol": "https",
                            "host": ["auth", "elecular", "com"],
                            "path": ["oauth", "token"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get Access Token For Test Client 2",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "e2a8def7-3b62-43d1-a460-4ab6cfe72c31",
                                "exec": [
                                    "pm.environment.set(\"access_token_2\", pm.response.json()[\"access_token\"]);"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"client_id\":\"EYHbAnyR8eou9NmnjwEtRWSWM3ZcmMe3\",\"client_secret\":\"3CMEeO77nQQlzwe2VB0Zk9x82rjCkTxV_55_-ReXWyu7sKzqFUaRwxnNlqbFIFgd\",\"audience\":\"http://www.grizzlybear-experiments.com\",\"grant_type\":\"client_credentials\"}"
                        },
                        "url": {
                            "raw": "https://auth.elecular.com/oauth/token",
                            "protocol": "https",
                            "host": ["auth", "elecular", "com"],
                            "path": ["oauth", "token"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get Access Token For Admin App",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "5fb35dfc-b280-4452-9885-65c1583ff3a2",
                                "exec": [
                                    "pm.environment.set(\"admin_access_token\", pm.response.json()[\"access_token\"]);"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"client_id\":\"SRh77fnlYCwiZcxYVW6bDKinbscF8Cip\",\"client_secret\":\"ofOWYAYqqCBCldwLzQEsUwRF5T-9xqhId-DFH_NwkI_Sd8kzy1OMxy91-TEude2a\",\"audience\":\"http://www.grizzlybear-experiments.com\",\"grant_type\":\"client_credentials\"}"
                        },
                        "url": {
                            "raw": "https://auth.elecular.com/oauth/token",
                            "protocol": "https",
                            "host": ["auth", "elecular", "com"],
                            "path": ["oauth", "token"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Project",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "b77cc1de-36ab-4d6d-b5e4-959da166869a",
                                "exec": [
                                    "pm.test(\"Status code is 201\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "pm.test(\"Body has id\", function() {",
                                    "    pm.expect(pm.response.json()).to.have.property('_id');",
                                    "});",
                                    "",
                                    "pm.environment.set(\"sampleProjectId\", pm.response.json()[\"_id\"]);"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{access_token}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\t\"projectName\": \"testProject\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects",
                            "host": ["localhost"],
                            "path": ["projects"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Project with another user",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "3d182dcb-2f46-45b2-9cfe-6497e20f6c14",
                                "exec": [
                                    "pm.test(\"Status code is 201\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "pm.test(\"Body has id\", function() {",
                                    "    pm.expect(pm.response.json()).to.have.property('_id');",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token_2}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\t\"projectName\": \"testProject\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects",
                            "host": ["localhost"],
                            "path": ["projects"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Project without project name",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "93908234-f82a-4581-9b8f-62503b332bbd",
                                "exec": [
                                    "pm.test(\"Status code is 400\", function () {",
                                    "    pm.response.to.have.status(400);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects",
                            "host": ["localhost"],
                            "path": ["projects"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Private API: Get all projects under given ownerId",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "bc93ec63-b4b1-40f8-ad7b-9cfb93c7d434",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Gets correct project\", function() {",
                                    "    pm.expect(pm.response.json()[0]._id).to.eql(pm.environment.get(\"sampleProjectId\"));",
                                    "",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "ownerid",
                                "type": "text",
                                "value": "xo509wTObnqcYKiOgLCJoLcHqSpFKCjL@clients",
                                "disabled": true
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost:8080/owners/xo509wTObnqcYKiOgLCJoLcHqSpFKCjL@clients/projects",
                            "host": ["localhost"],
                            "port": "8080",
                            "path": [
                                "owners",
                                "xo509wTObnqcYKiOgLCJoLcHqSpFKCjL@clients",
                                "projects"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Project with projectId",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "0ed2cdd4-cede-43df-8ec9-c7cc2c8939e8",
                                "exec": [
                                    "pm.test(\"Status code is 201\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "pm.test(\"Body has id\", function() {",
                                    "    pm.expect(pm.response.json()).to.have.property('_id');",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\t\"projectName\": \"testProject\",\n\t\"projectId\": \"5e865ed82a2aeb6436f498dc\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects",
                            "host": ["localhost"],
                            "path": ["projects"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Project with duplicate project id",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "ce56997a-d372-46ea-a743-852e0f846dd9",
                                "exec": [
                                    "pm.test(\"Status code is 409\", function () {",
                                    "    pm.response.to.have.status(409);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\t\"projectName\": \"testProject\",\n\t\"projectId\": \"5e865ed82a2aeb6436f498dc\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects",
                            "host": ["localhost"],
                            "path": ["projects"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Project with invalid project id",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "0a87c712-0639-4c60-9dfe-980f40419395",
                                "exec": [
                                    "pm.test(\"Status code is 400\", function () {",
                                    "    pm.response.to.have.status(400);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\t\"projectName\": \"testProject\",\n\t\"projectId\": \"5e865ed82a2aeb6436f49\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects",
                            "host": ["localhost"],
                            "path": ["projects"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Another Project",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "aad991b5-278c-4334-8e15-36c1a2f9ddf9",
                                "exec": [
                                    "pm.test(\"Status code is 201\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "pm.test(\"Body has id\", function() {",
                                    "    pm.expect(pm.response.json()).to.have.property('_id');",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{access_token}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\t\"projectName\": \"testProject\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects",
                            "host": ["localhost"],
                            "path": ["projects"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get All Projects",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "6ad7dd19-75f7-4bff-9b8d-e5e65bb3b18a",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Has two projects\", function () {",
                                    "    pm.expect(pm.response.json().length).to.equal(3)",
                                    "    pm.expect(pm.response.json()[0].ownerId).to.equal('xo509wTObnqcYKiOgLCJoLcHqSpFKCjL@clients')",
                                    "    pm.expect(pm.response.json()[1].ownerId).to.equal('xo509wTObnqcYKiOgLCJoLcHqSpFKCjL@clients')",
                                    "    pm.expect(pm.response.json()[2].ownerId).to.equal('xo509wTObnqcYKiOgLCJoLcHqSpFKCjL@clients')",
                                    "});",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects",
                            "host": ["localhost"],
                            "path": ["projects"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get All Projects As Admin",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "ffbf6c15-5e94-46a5-a16e-47cd54f4ed95",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Body has projects\", function() {",
                                    "    pm.expect(pm.response.json().length).to.be.above(0)",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{admin_access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects?all=true",
                            "host": ["localhost"],
                            "path": ["projects"],
                            "query": [
                                {
                                    "key": "all",
                                    "value": "true"
                                }
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Cannot Get All Projects As Admin Without proper token",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "5a9e093e-f3a1-41f7-892a-b3d7aa9cd16f",
                                "exec": [
                                    "pm.test(\"Status code is 403\", function () {",
                                    "    pm.response.to.have.status(403);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects?all=true",
                            "host": ["localhost"],
                            "path": ["projects"],
                            "query": [
                                {
                                    "key": "all",
                                    "value": "true"
                                }
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get Permissions of access token",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "8102e4ee-5d8f-418d-bbe5-4b4adf80fcb7",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Body has scope\", function () {",
                                    "    pm.expect(pm.response.text()).to.include(\"read:all:projects\");",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{admin_access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/owner/scope",
                            "host": ["localhost"],
                            "path": ["owner", "scope"]
                        }
                    },
                    "response": []
                }
            ],
            "protocolProfileBehavior": {}
        },
        {
            "name": "Experiments API",
            "item": [
                {
                    "name": "Create Project",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "08cf6b75-3278-4aa0-b4ed-1028d29ada64",
                                "exec": [
                                    "pm.test(\"Status code is 201\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "pm.test(\"Body has id\", function() {",
                                    "    pm.expect(pm.response.json()).to.have.property('_id');",
                                    "});",
                                    "",
                                    "pm.environment.set(\"sampleProjectId\", pm.response.json()[\"_id\"]);"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{access_token}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\t\"projectName\": \"testProject\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects",
                            "host": ["localhost"],
                            "path": ["projects"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Experiment",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "79c7607a-ce62-4d7c-8770-f9b9738d4ed6",
                                "exec": [
                                    "pm.test(\"Status code is 201\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "pm.test(\"Body has id\", function() {",
                                    "    pm.expect(pm.response.json()).to.have.property('_id');",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{access_token}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\t\"_id\": {\n\t\t\"projectId\": \"{{sampleProjectId}}\",\n\t\t\"experimentName\": \"exp1\"\n\t},\n\t\"startTime\": 1685473303000,\n\t\"variations\": [{\n\t\t\t\"variationName\": \"variation1\",\n\t\t\t\"normalizedTrafficAmount\": 0.1,\n\t\t\t\"variables\": [{\n\t\t\t\t\"variableName\": \"var1\",\n\t\t\t\t\"variableType\": \"String\",\n\t\t\t\t\"variableValue\": \"test\"\n\t\t\t}],\n\t\t\t\"controlGroup\": true\n\t\t}, {\n\t\t\t\"variationName\": \"variation2\",\n\t\t\t\"normalizedTrafficAmount\": 0.9,\n\t\t\t\"variables\": [{\n\t\t\t\t\"variableName\": \"var1\",\n\t\t\t\t\"variableType\": \"String\",\n\t\t\t\t\"variableValue\": \"test\"\n\t\t\t}],\n\t\t\t\"controlGroup\": false\n\t}]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects/{{sampleProjectId}}/experiments",
                            "host": ["localhost"],
                            "path": [
                                "projects",
                                "{{sampleProjectId}}",
                                "experiments"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Another Experiment",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "2b5ff6f9-eadd-4866-9dab-b783a97a2e6f",
                                "exec": [
                                    "pm.test(\"Status code is 201\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "pm.test(\"Body has id\", function() {",
                                    "    pm.expect(pm.response.json()).to.have.property('_id');",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\t\"_id\": {\n\t\t\"projectId\": \"{{sampleProjectId}}\",\n\t\t\"experimentName\": \"exp2\"\n\t},\n\t\"startTime\": 1685474304000,\n\t\"endTime\": 1685474305000,\n\t\"variations\": [{\n\t\t\t\"variationName\": \"variation1\",\n\t\t\t\"normalizedTrafficAmount\": 0.1,\n\t\t\t\"variables\": [{\n\t\t\t\t\"variableName\": \"var1\",\n\t\t\t\t\"variableType\": \"String\",\n\t\t\t\t\"variableValue\": \"test\"\n\t\t\t}],\n\t\t\t\"controlGroup\": true\n\t\t}, {\n\t\t\t\"variationName\": \"variation2\",\n\t\t\t\"normalizedTrafficAmount\": 0.9,\n\t\t\t\"variables\": [{\n\t\t\t\t\"variableName\": \"var1\",\n\t\t\t\t\"variableType\": \"String\",\n\t\t\t\t\"variableValue\": \"test\"\n\t\t\t}],\n\t\t\t\"controlGroup\": false\n\t}]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects/{{sampleProjectId}}/experiments",
                            "host": ["localhost"],
                            "path": [
                                "projects",
                                "{{sampleProjectId}}",
                                "experiments"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Duplicate Experiment",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "8a3f434f-6905-450c-a065-f3b097d88b5c",
                                "exec": [
                                    "pm.test(\"Status code is 409\", function () {",
                                    "    pm.response.to.have.status(409);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\t\"_id\": {\n\t\t\"projectId\": \"{{sampleProjectId}}\",\n\t\t\"experimentName\": \"exp1\"\n\t},\n\t\"startTime\": 1685473303000,\n\t\"variations\": [{\n\t\t\t\"variationName\": \"variation1\",\n\t\t\t\"normalizedTrafficAmount\": 0.1,\n\t\t\t\"variables\": [{\n\t\t\t\t\"variableName\": \"var1\",\n\t\t\t\t\"variableType\": \"String\",\n\t\t\t\t\"variableValue\": \"test\"\n\t\t\t}],\n\t\t\t\"controlGroup\": true\n\t\t}, {\n\t\t\t\"variationName\": \"variation2\",\n\t\t\t\"normalizedTrafficAmount\": 0.9,\n\t\t\t\"variables\": [{\n\t\t\t\t\"variableName\": \"var1\",\n\t\t\t\t\"variableType\": \"String\",\n\t\t\t\t\"variableValue\": \"test\"\n\t\t\t}],\n\t\t\t\"controlGroup\": false\n\t}]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects/{{sampleProjectId}}/experiments",
                            "host": ["localhost"],
                            "path": [
                                "projects",
                                "{{sampleProjectId}}",
                                "experiments"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Experiment Without Permissions",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "5b4b6bc7-05bf-4e57-b524-d66296eb9987",
                                "exec": [
                                    "pm.test(\"Status code is 403\", function () {",
                                    "    pm.response.to.have.status(403);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{access_token_2}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\t\"_id\": {\n\t\t\"projectId\": \"{{sampleProjectId}}\",\n\t\t\"experimentName\": \"exp1\"\n\t},\n\t\"startTime\": 1685473303000,\n\t\"variations\": [{\n\t\t\t\"variationName\": \"variation1\",\n\t\t\t\"normalizedTrafficAmount\": 0.1,\n\t\t\t\"variables\": [{\n\t\t\t\t\"variableName\": \"var1\",\n\t\t\t\t\"variableType\": \"String\",\n\t\t\t\t\"variableValue\": \"test\"\n\t\t\t}]\n\t\t}, {\n\t\t\t\"variationName\": \"variation2\",\n\t\t\t\"normalizedTrafficAmount\": 0.9,\n\t\t\t\"variables\": [{\n\t\t\t\t\"variableName\": \"var1\",\n\t\t\t\t\"variableType\": \"String\",\n\t\t\t\t\"variableValue\": \"test\"\n\t\t\t}]\n\t}]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects/{{sampleProjectId}}/experiments",
                            "host": ["localhost"],
                            "path": [
                                "projects",
                                "{{sampleProjectId}}",
                                "experiments"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Invalid experiment",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "bab91950-16df-495f-a54a-23a446c6910b",
                                "exec": [
                                    "pm.test(\"Status code is 400\", function () {",
                                    "    pm.response.to.have.status(400);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\t\"_id\": {\n\t\t\"projectId\": \"{{sampleProjectId}}\",\n\t\t\"experimentName\": \"invalid-exp\"\n\t},\n\t\"variations\": [{\n\t\t\t\"variationName\": \"variation1\",\n\t\t\t\"normalizedTrafficAmount\": 0.1,\n\t\t\t\"variables\": [{\n\t\t\t\t\"variableName\": \"var1\",\n\t\t\t\t\"variableType\": \"String\",\n\t\t\t\t\"variableValue\": \"test\"\n\t\t\t}]\n\t\t}, {\n\t\t\t\"variationName\": \"variation2\",\n\t\t\t\"normalizedTrafficAmount\": 0.4,\n\t\t\t\"variables\": [{\n\t\t\t\t\"variableName\": \"var1\",\n\t\t\t\t\"variableType\": \"String\",\n\t\t\t\t\"variableValue\": \"test\"\n\t\t\t}]\n\t}]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects/{{sampleProjectId}}/experiments",
                            "host": ["localhost"],
                            "path": [
                                "projects",
                                "{{sampleProjectId}}",
                                "experiments"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get  experiment with given timerange",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "36f84c46-f655-467e-8f92-1843f82cc835",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response has experiment\", function() {",
                                    "    pm.expect(pm.response.json().length).to.equal(1);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost:8080/bulk/experiments/?startTime=1685473303000&endTime=1685473306000",
                            "host": ["localhost"],
                            "port": "8080",
                            "path": ["bulk", "experiments", ""],
                            "query": [
                                {
                                    "key": "startTime",
                                    "value": "1685473303000"
                                },
                                {
                                    "key": "endTime",
                                    "value": "1685473306000"
                                }
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get User Variation",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "14ff68dc-5a78-4256-ad20-f362c9b8f525",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response has 3 elements\", function() {",
                                    "    pm.expect(pm.response.json().length).to.equal(3);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": "[{\n\t\"projectId\": \"{{sampleProjectId}}\",\n\t\"experimentName\": \"exp1\",\n\t\"userId\": \"24c9e15e52afc47c225b757e7bee1f9d\"\n}, {\n\t\"projectId\": \"{{sampleProjectId}}\",\n\t\"experimentName\": \"exp2\",\n\t\"userId\": \"24c9e15e52afc47c225b757e7bee1f9d\"\n}, {\n\t\"projectId\": \"{{sampleProjectId}}\",\n\t\"experimentName\": \"exp2\",\n\t\"userId\": \"f0b3b7623d3bedf898459673d778319e\"\n}]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost:8080/bulk/variations",
                            "host": ["localhost"],
                            "port": "8080",
                            "path": ["bulk", "variations"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get  experiments with given projectId",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "a0837192-2044-4a9c-857c-61d1607a3b6b",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response has experiment\", function() {",
                                    "    pm.expect(pm.response.json().length).to.equal(2);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects/{{sampleProjectId}}/experiments",
                            "host": ["localhost"],
                            "path": [
                                "projects",
                                "{{sampleProjectId}}",
                                "experiments"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get  experiment invalid permissions",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "3bedfd46-3201-486d-8735-dea4b891b9d4",
                                "exec": [
                                    "pm.test(\"Status code is 403\", function () {",
                                    "    pm.response.to.have.status(403);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{access_token_2}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects/{{sampleProjectId}}/experiments",
                            "host": ["localhost"],
                            "path": [
                                "projects",
                                "{{sampleProjectId}}",
                                "experiments"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get  experiment with given projectId and Name",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "d31f645f-e8f0-4d6d-bb19-4b4b772007bc",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Body has _id\", function() {",
                                    "    pm.expect(pm.response.json()[0]).to.have.property('_id');",
                                    "});",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects/{{sampleProjectId}}/experiments/exp1",
                            "host": ["localhost"],
                            "path": [
                                "projects",
                                "{{sampleProjectId}}",
                                "experiments",
                                "exp1"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get  variation with given project, Name and user id",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "027a5b85-f489-4fca-a3fd-6695f254a5f4",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Body has variation name\", function() {",
                                    "    pm.expect(pm.response.json()).to.have.property('variationName');",
                                    "});",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects/{{sampleProjectId}}/experiments/exp1/variations?userId=test",
                            "host": ["localhost"],
                            "path": [
                                "projects",
                                "{{sampleProjectId}}",
                                "experiments",
                                "exp1",
                                "variations"
                            ],
                            "query": [
                                {
                                    "key": "userId",
                                    "value": "test"
                                }
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Stop  experiment with invalid credentials",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "33b65a91-bca6-4a5d-860d-32c27c7cbabf",
                                "exec": [
                                    "pm.test(\"Status code is 403\", function () {",
                                    "    pm.response.to.have.status(403);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token_2}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects/{{sampleProjectId}}/experiments/exp1/stop",
                            "host": ["localhost"],
                            "path": [
                                "projects",
                                "{{sampleProjectId}}",
                                "experiments",
                                "exp1",
                                "stop"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Stop  experiment that does not exist",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "a204e2d6-925a-4aba-a140-00776f12c361",
                                "exec": [
                                    "pm.test(\"Status code is 404\", function () {",
                                    "    pm.response.to.have.status(404);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects/{{sampleProjectId}}/experiments/invalid_exp1/stop",
                            "host": ["localhost"],
                            "path": [
                                "projects",
                                "{{sampleProjectId}}",
                                "experiments",
                                "invalid_exp1",
                                "stop"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Stop  experiment with given projectId and Name",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "dedd8b5f-def5-4f77-934d-7c45c9b53494",
                                "exec": [
                                    "pm.test(\"Status code is 201\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects/{{sampleProjectId}}/experiments/exp1/stop",
                            "host": ["localhost"],
                            "path": [
                                "projects",
                                "{{sampleProjectId}}",
                                "experiments",
                                "exp1",
                                "stop"
                            ]
                        }
                    },
                    "response": []
                }
            ],
            "protocolProfileBehavior": {}
        },
        {
            "name": "Owner API",
            "item": [
                {
                    "name": "Check if terms of service is accepted",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "3d74054b-48f3-4b95-b0d6-0f369d653c17",
                                "exec": [
                                    "pm.test(\"Your test name\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.accepted).to.eql(false);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{access_token}}",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "localhost/owner/termsOfUse/accept/status",
                            "host": ["localhost"],
                            "path": ["owner", "termsOfUse", "accept", "status"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Accept terms of condition",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "7517eaa6-835d-4b25-b869-45ee59f028e8",
                                "exec": [
                                    "pm.test(\"Your test name\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.accepted).to.eql(true);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "url": {
                            "raw": "localhost/owner/termsOfUse/accept",
                            "host": ["localhost"],
                            "path": ["owner", "termsOfUse", "accept"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Check if terms of service is accepted after accepting",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "ad236a3d-ee3f-4375-8573-9c8f1ab8d705",
                                "exec": [
                                    "pm.test(\"Your test name\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.accepted).to.eql(true);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "url": {
                            "raw": "localhost/owner/termsOfUse/accept/status",
                            "host": ["localhost"],
                            "path": ["owner", "termsOfUse", "accept", "status"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Check if terms of service is not accepted",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "f66c889d-9970-4dbd-a02b-642d599b13be",
                                "exec": [
                                    "pm.test(\"Your test name\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.accepted).to.eql(false);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token_2}}"
                            }
                        ],
                        "url": {
                            "raw": "localhost/owner/termsOfUse/accept/status",
                            "host": ["localhost"],
                            "path": ["owner", "termsOfUse", "accept", "status"]
                        }
                    },
                    "response": []
                }
            ],
            "protocolProfileBehavior": {}
        },
        {
            "name": "Test Status",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "id": "23f47660-96fe-4cd4-b632-c7bc4abbb51d",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "localhost",
                    "host": ["localhost"]
                }
            },
            "response": []
        }
    ],
    "protocolProfileBehavior": {}
}
