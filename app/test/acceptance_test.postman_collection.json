{
    "info": {
        "_postman_id": "22d7ea5f-ccab-4e42-9bd8-c1a591f09bdd",
        "name": "acceptance_test",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "Projects API",
            "item": [
                {
                    "name": "Get Access Token For Test Client",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "d17bc291-ca4f-41a8-ac59-f223ab5614c9",
                                "exec": [
                                    "pm.environment.set(\"access_token\", pm.response.json()[\"access_token\"]);"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"client_id\":\"8R7YBPp1RZHySEwxead6GQUwDcLFIHFI\",\"client_secret\":\"T_HItnlZg9N-fPtSWpF_nYpW4VvqbksQkt77oIy5TZ-fuhHGE34exdUpcZRLvya1\",\"audience\":\"http://www.grizzlybear-experiments.com\",\"grant_type\":\"client_credentials\"}"
                        },
                        "url": {
                            "raw": "https://grizzly-bear-dev.eu.auth0.com/oauth/token",
                            "protocol": "https",
                            "host": ["grizzly-bear-dev", "eu", "auth0", "com"],
                            "path": ["oauth", "token"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get Access Token For Test Client 2",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "4aea8fc5-7a14-415d-8a63-a3989704cdf5",
                                "exec": [
                                    "pm.environment.set(\"access_token_2\", pm.response.json()[\"access_token\"]);"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"client_id\":\"pDBt9PPrzQCGzOK3KLIGw3P3K4aGOsjB\",\"client_secret\":\"RH_TZ10o7ScOyq1yu12Mrr59F099SxkptwAJBjrhzCkNZe80HCy6eq4P0xw9bpBB\",\"audience\":\"http://www.grizzlybear-experiments.com\",\"grant_type\":\"client_credentials\"}"
                        },
                        "url": {
                            "raw": "https://grizzly-bear-dev.eu.auth0.com/oauth/token",
                            "protocol": "https",
                            "host": ["grizzly-bear-dev", "eu", "auth0", "com"],
                            "path": ["oauth", "token"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get Access Token For Admin App",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "83e56267-206c-4880-b9df-a61d873ea070",
                                "exec": [
                                    "pm.environment.set(\"admin_access_token\", pm.response.json()[\"access_token\"]);"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"client_id\":\"JznMEKtDXtLzsyEpJkPIs1LvHDd5FoZO\",\"client_secret\":\"UYSXMQ6xB7YKayJdARI4Af48DjUgKmhWQpvD0Pb3db7TElrEzjL8Bnmq_Sp3KiNJ\",\"audience\":\"http://www.grizzlybear-experiments.com\",\"grant_type\":\"client_credentials\"}"
                        },
                        "url": {
                            "raw": "https://grizzly-bear-dev.eu.auth0.com/oauth/token",
                            "protocol": "https",
                            "host": ["grizzly-bear-dev", "eu", "auth0", "com"],
                            "path": ["oauth", "token"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Project",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "d51e9374-ec1d-4cd3-9a05-866bc98f286e",
                                "exec": [
                                    "pm.test(\"Status code is 201\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "pm.test(\"Body has id\", function() {",
                                    "    pm.expect(pm.response.json()).to.have.property('_id');",
                                    "});",
                                    "",
                                    "pm.environment.set(\"sampleProjectId\", pm.response.json()[\"_id\"]);"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{access_token}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\t\"projectName\": \"testProject\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects",
                            "host": ["localhost"],
                            "path": ["projects"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Project with another user",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "8ac55fb1-dbb0-49f9-87db-59180eb7f9b7",
                                "exec": [
                                    "pm.test(\"Status code is 201\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "pm.test(\"Body has id\", function() {",
                                    "    pm.expect(pm.response.json()).to.have.property('_id');",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token_2}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\t\"projectName\": \"testProject\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects",
                            "host": ["localhost"],
                            "path": ["projects"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Project without project name",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "9efc37bf-115c-45f9-a586-9268db302b41",
                                "exec": [
                                    "pm.test(\"Status code is 400\", function () {",
                                    "    pm.response.to.have.status(400);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects",
                            "host": ["localhost"],
                            "path": ["projects"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Private API: Get all projects under given ownerId",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "90b789f3-441f-4d78-9caa-ae4634c97857",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Gets correct project\", function() {",
                                    "    pm.expect(pm.response.json()[0]._id).to.eql(pm.environment.get(\"sampleProjectId\"));",
                                    "",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "ownerid",
                                "type": "text",
                                "value": "xo509wTObnqcYKiOgLCJoLcHqSpFKCjL@clients",
                                "disabled": true
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost:8080/owners/8R7YBPp1RZHySEwxead6GQUwDcLFIHFI@clients/projects",
                            "host": ["localhost"],
                            "port": "8080",
                            "path": [
                                "owners",
                                "8R7YBPp1RZHySEwxead6GQUwDcLFIHFI@clients",
                                "projects"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Project with projectId",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "a75857df-c0e2-434a-8360-2c2d6a6aed57",
                                "exec": [
                                    "pm.test(\"Status code is 201\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "pm.test(\"Body has id\", function() {",
                                    "    pm.expect(pm.response.json()).to.have.property('_id');",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\t\"projectName\": \"testProject\",\n\t\"projectId\": \"5e865ed82a2aeb6436f498dc\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects",
                            "host": ["localhost"],
                            "path": ["projects"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Project with duplicate project id",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "c49614a8-0e6e-4845-b8c4-2fc9fbd29abf",
                                "exec": [
                                    "pm.test(\"Status code is 409\", function () {",
                                    "    pm.response.to.have.status(409);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\t\"projectName\": \"testProject\",\n\t\"projectId\": \"5e865ed82a2aeb6436f498dc\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects",
                            "host": ["localhost"],
                            "path": ["projects"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Project with invalid project id",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "59275b85-6989-435f-9535-5b0462496340",
                                "exec": [
                                    "pm.test(\"Status code is 400\", function () {",
                                    "    pm.response.to.have.status(400);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\t\"projectName\": \"testProject\",\n\t\"projectId\": \"5e865ed82a2aeb6436f49\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects",
                            "host": ["localhost"],
                            "path": ["projects"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Another Project",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "11f750d3-3fc2-4460-86f8-9d52942be15e",
                                "exec": [
                                    "pm.test(\"Status code is 201\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "pm.test(\"Body has id\", function() {",
                                    "    pm.expect(pm.response.json()).to.have.property('_id');",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{access_token}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\t\"projectName\": \"testProject\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects",
                            "host": ["localhost"],
                            "path": ["projects"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get All Projects",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "6463598f-13ec-463c-aaff-4fb6f5beaeda",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Has two projects\", function () {",
                                    "    pm.expect(pm.response.json().length).to.equal(3)",
                                    "    pm.expect(pm.response.json()[0].ownerId).to.equal('8R7YBPp1RZHySEwxead6GQUwDcLFIHFI@clients')",
                                    "    pm.expect(pm.response.json()[1].ownerId).to.equal('8R7YBPp1RZHySEwxead6GQUwDcLFIHFI@clients')",
                                    "    pm.expect(pm.response.json()[2].ownerId).to.equal('8R7YBPp1RZHySEwxead6GQUwDcLFIHFI@clients')",
                                    "});",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects",
                            "host": ["localhost"],
                            "path": ["projects"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get All Projects As Admin",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "109ab0df-1bb2-4a01-a37c-fe5bee550889",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Body has projects\", function() {",
                                    "    pm.expect(pm.response.json().length).to.be.above(0)",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{admin_access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/admin/projects",
                            "host": ["localhost"],
                            "path": ["admin", "projects"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Cannot Get All Projects As Admin Without proper token",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "ce39c8e8-6d29-42b7-a54b-7fca95a9f4f3",
                                "exec": [
                                    "pm.test(\"Status code is 403\", function () {",
                                    "    pm.response.to.have.status(403);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/admin/projects",
                            "host": ["localhost"],
                            "path": ["admin", "projects"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get Permissions of access token",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "e4c236f6-c6b3-4f1c-be0a-4e1610e4b9f1",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Body has scope\", function () {",
                                    "    pm.expect(pm.response.text()).to.include(\"read:all:projects\");",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{admin_access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/owner/scope",
                            "host": ["localhost"],
                            "path": ["owner", "scope"]
                        }
                    },
                    "response": []
                }
            ],
            "protocolProfileBehavior": {}
        },
        {
            "name": "Experiments API",
            "item": [
                {
                    "name": "Create Project",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "bd374893-9299-4985-83ac-ac9868569391",
                                "exec": [
                                    "pm.test(\"Status code is 201\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "pm.test(\"Body has id\", function() {",
                                    "    pm.expect(pm.response.json()).to.have.property('_id');",
                                    "});",
                                    "",
                                    "pm.environment.set(\"sampleProjectId\", pm.response.json()[\"_id\"]);"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{access_token}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\t\"projectName\": \"testProject\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects",
                            "host": ["localhost"],
                            "path": ["projects"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Experiment",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "c3124912-f217-43b2-b36a-d766bd86f31f",
                                "exec": [
                                    "pm.test(\"Status code is 201\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "pm.test(\"Body has id\", function() {",
                                    "    pm.expect(pm.response.json()).to.have.property('_id');",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{access_token}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\t\"_id\": {\n\t\t\"projectId\": \"{{sampleProjectId}}\",\n\t\t\"experimentName\": \"exp1\"\n\t},\n\t\"startTime\": 1685473303000,\n\t\"variations\": [{\n\t\t\t\"variationName\": \"variation1\",\n\t\t\t\"normalizedTrafficAmount\": 0.1,\n\t\t\t\"variables\": [{\n\t\t\t\t\"variableName\": \"var1\",\n\t\t\t\t\"variableType\": \"String\",\n\t\t\t\t\"variableValue\": \"test\"\n\t\t\t}],\n\t\t\t\"controlGroup\": true\n\t\t}, {\n\t\t\t\"variationName\": \"variation2\",\n\t\t\t\"normalizedTrafficAmount\": 0.9,\n\t\t\t\"variables\": [{\n\t\t\t\t\"variableName\": \"var1\",\n\t\t\t\t\"variableType\": \"String\",\n\t\t\t\t\"variableValue\": \"test\"\n\t\t\t}],\n\t\t\t\"controlGroup\": false\n\t}]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects/{{sampleProjectId}}/experiments",
                            "host": ["localhost"],
                            "path": [
                                "projects",
                                "{{sampleProjectId}}",
                                "experiments"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Another Experiment",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "bb58ae7d-07df-4d12-ba6b-ce3cf4d8c02f",
                                "exec": [
                                    "pm.test(\"Status code is 201\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "pm.test(\"Body has id\", function() {",
                                    "    pm.expect(pm.response.json()).to.have.property('_id');",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\t\"_id\": {\n\t\t\"projectId\": \"{{sampleProjectId}}\",\n\t\t\"experimentName\": \"exp2\"\n\t},\n\t\"startTime\": 1685474304000,\n\t\"endTime\": 1685474305000,\n\t\"variations\": [{\n\t\t\t\"variationName\": \"variation1\",\n\t\t\t\"normalizedTrafficAmount\": 0.1,\n\t\t\t\"variables\": [{\n\t\t\t\t\"variableName\": \"var1\",\n\t\t\t\t\"variableType\": \"String\",\n\t\t\t\t\"variableValue\": \"test\"\n\t\t\t}],\n\t\t\t\"controlGroup\": true\n\t\t}, {\n\t\t\t\"variationName\": \"variation2\",\n\t\t\t\"normalizedTrafficAmount\": 0.9,\n\t\t\t\"variables\": [{\n\t\t\t\t\"variableName\": \"var1\",\n\t\t\t\t\"variableType\": \"String\",\n\t\t\t\t\"variableValue\": \"test\"\n\t\t\t}],\n\t\t\t\"controlGroup\": false\n\t}]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects/{{sampleProjectId}}/experiments",
                            "host": ["localhost"],
                            "path": [
                                "projects",
                                "{{sampleProjectId}}",
                                "experiments"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Duplicate Experiment",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "dc139676-394e-4e74-8608-221dd82cac76",
                                "exec": [
                                    "pm.test(\"Status code is 409\", function () {",
                                    "    pm.response.to.have.status(409);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\t\"_id\": {\n\t\t\"projectId\": \"{{sampleProjectId}}\",\n\t\t\"experimentName\": \"exp1\"\n\t},\n\t\"startTime\": 1685473303000,\n\t\"variations\": [{\n\t\t\t\"variationName\": \"variation1\",\n\t\t\t\"normalizedTrafficAmount\": 0.1,\n\t\t\t\"variables\": [{\n\t\t\t\t\"variableName\": \"var1\",\n\t\t\t\t\"variableType\": \"String\",\n\t\t\t\t\"variableValue\": \"test\"\n\t\t\t}],\n\t\t\t\"controlGroup\": true\n\t\t}, {\n\t\t\t\"variationName\": \"variation2\",\n\t\t\t\"normalizedTrafficAmount\": 0.9,\n\t\t\t\"variables\": [{\n\t\t\t\t\"variableName\": \"var1\",\n\t\t\t\t\"variableType\": \"String\",\n\t\t\t\t\"variableValue\": \"test\"\n\t\t\t}],\n\t\t\t\"controlGroup\": false\n\t}]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects/{{sampleProjectId}}/experiments",
                            "host": ["localhost"],
                            "path": [
                                "projects",
                                "{{sampleProjectId}}",
                                "experiments"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Experiment Without Permissions",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "2701e9b5-05cb-4a40-b4aa-a13c9e5dd9cf",
                                "exec": [
                                    "pm.test(\"Status code is 403\", function () {",
                                    "    pm.response.to.have.status(403);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{access_token_2}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\t\"_id\": {\n\t\t\"projectId\": \"{{sampleProjectId}}\",\n\t\t\"experimentName\": \"exp1\"\n\t},\n\t\"startTime\": 1685473303000,\n\t\"variations\": [{\n\t\t\t\"variationName\": \"variation1\",\n\t\t\t\"normalizedTrafficAmount\": 0.1,\n\t\t\t\"variables\": [{\n\t\t\t\t\"variableName\": \"var1\",\n\t\t\t\t\"variableType\": \"String\",\n\t\t\t\t\"variableValue\": \"test\"\n\t\t\t}]\n\t\t}, {\n\t\t\t\"variationName\": \"variation2\",\n\t\t\t\"normalizedTrafficAmount\": 0.9,\n\t\t\t\"variables\": [{\n\t\t\t\t\"variableName\": \"var1\",\n\t\t\t\t\"variableType\": \"String\",\n\t\t\t\t\"variableValue\": \"test\"\n\t\t\t}]\n\t}]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects/{{sampleProjectId}}/experiments",
                            "host": ["localhost"],
                            "path": [
                                "projects",
                                "{{sampleProjectId}}",
                                "experiments"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Invalid experiment",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "68eb67fb-4b37-464a-a96f-cdbb5015671e",
                                "exec": [
                                    "pm.test(\"Status code is 400\", function () {",
                                    "    pm.response.to.have.status(400);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\t\"_id\": {\n\t\t\"projectId\": \"{{sampleProjectId}}\",\n\t\t\"experimentName\": \"invalid-exp\"\n\t},\n\t\"variations\": [{\n\t\t\t\"variationName\": \"variation1\",\n\t\t\t\"normalizedTrafficAmount\": 0.1,\n\t\t\t\"variables\": [{\n\t\t\t\t\"variableName\": \"var1\",\n\t\t\t\t\"variableType\": \"String\",\n\t\t\t\t\"variableValue\": \"test\"\n\t\t\t}]\n\t\t}, {\n\t\t\t\"variationName\": \"variation2\",\n\t\t\t\"normalizedTrafficAmount\": 0.4,\n\t\t\t\"variables\": [{\n\t\t\t\t\"variableName\": \"var1\",\n\t\t\t\t\"variableType\": \"String\",\n\t\t\t\t\"variableValue\": \"test\"\n\t\t\t}]\n\t}]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects/{{sampleProjectId}}/experiments",
                            "host": ["localhost"],
                            "path": [
                                "projects",
                                "{{sampleProjectId}}",
                                "experiments"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get  experiment with given timerange",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "82b99615-cbe8-4244-bc1b-be8360da347d",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response has experiment\", function() {",
                                    "    pm.expect(pm.response.json().length).to.equal(1);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost:8080/bulk/experiments/?startTime=1685473303000&endTime=1685473306000",
                            "host": ["localhost"],
                            "port": "8080",
                            "path": ["bulk", "experiments", ""],
                            "query": [
                                {
                                    "key": "startTime",
                                    "value": "1685473303000"
                                },
                                {
                                    "key": "endTime",
                                    "value": "1685473306000"
                                }
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get User Variation",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "f26a7172-9874-455e-83af-eecebbffa819",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response has 3 elements\", function() {",
                                    "    pm.expect(pm.response.json().length).to.equal(3);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": "[{\n\t\"projectId\": \"{{sampleProjectId}}\",\n\t\"experimentName\": \"exp1\",\n\t\"userId\": \"24c9e15e52afc47c225b757e7bee1f9d\"\n}, {\n\t\"projectId\": \"{{sampleProjectId}}\",\n\t\"experimentName\": \"exp2\",\n\t\"userId\": \"24c9e15e52afc47c225b757e7bee1f9d\"\n}, {\n\t\"projectId\": \"{{sampleProjectId}}\",\n\t\"experimentName\": \"exp2\",\n\t\"userId\": \"f0b3b7623d3bedf898459673d778319e\"\n}]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost:8080/bulk/variations",
                            "host": ["localhost"],
                            "port": "8080",
                            "path": ["bulk", "variations"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get  experiments with given projectId",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "e37aa67b-2aed-44a7-b840-b5c6d1880ad7",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response has experiment\", function() {",
                                    "    pm.expect(pm.response.json().length).to.equal(2);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects/{{sampleProjectId}}/experiments",
                            "host": ["localhost"],
                            "path": [
                                "projects",
                                "{{sampleProjectId}}",
                                "experiments"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get  experiment invalid permissions",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "8fa3cbb0-bf24-44cc-89f3-e590b7eca755",
                                "exec": [
                                    "pm.test(\"Status code is 403\", function () {",
                                    "    pm.response.to.have.status(403);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{access_token_2}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects/{{sampleProjectId}}/experiments",
                            "host": ["localhost"],
                            "path": [
                                "projects",
                                "{{sampleProjectId}}",
                                "experiments"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get  experiment with given projectId and Name",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "22868057-7bc9-4267-b779-adacd9749d16",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Body has _id\", function() {",
                                    "    pm.expect(pm.response.json()[0]).to.have.property('_id');",
                                    "});",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects/{{sampleProjectId}}/experiments/exp1",
                            "host": ["localhost"],
                            "path": [
                                "projects",
                                "{{sampleProjectId}}",
                                "experiments",
                                "exp1"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get  variation with given project, Name and user id",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "d71b2216-f10e-425f-8374-88bcb9b4c644",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Body has variation name\", function() {",
                                    "    pm.expect(pm.response.json()).to.have.property('variationName');",
                                    "});",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects/{{sampleProjectId}}/experiments/exp1/variations?userId=test",
                            "host": ["localhost"],
                            "path": [
                                "projects",
                                "{{sampleProjectId}}",
                                "experiments",
                                "exp1",
                                "variations"
                            ],
                            "query": [
                                {
                                    "key": "userId",
                                    "value": "test"
                                }
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Stop  experiment with invalid credentials",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "9b9c7f13-add4-46be-9ff9-04e8331f9048",
                                "exec": [
                                    "pm.test(\"Status code is 403\", function () {",
                                    "    pm.response.to.have.status(403);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token_2}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects/{{sampleProjectId}}/experiments/exp1/stop",
                            "host": ["localhost"],
                            "path": [
                                "projects",
                                "{{sampleProjectId}}",
                                "experiments",
                                "exp1",
                                "stop"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Stop  experiment that does not exist",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "acb96c8f-7193-46bb-bafa-2a36646324d1",
                                "exec": [
                                    "pm.test(\"Status code is 404\", function () {",
                                    "    pm.response.to.have.status(404);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects/{{sampleProjectId}}/experiments/invalid_exp1/stop",
                            "host": ["localhost"],
                            "path": [
                                "projects",
                                "{{sampleProjectId}}",
                                "experiments",
                                "invalid_exp1",
                                "stop"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Stop  experiment with given projectId and Name",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "c79f0614-6615-41fb-b7e1-f5ebfcf54680",
                                "exec": [
                                    "pm.test(\"Status code is 201\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects/{{sampleProjectId}}/experiments/exp1/stop",
                            "host": ["localhost"],
                            "path": [
                                "projects",
                                "{{sampleProjectId}}",
                                "experiments",
                                "exp1",
                                "stop"
                            ]
                        }
                    },
                    "response": []
                }
            ],
            "protocolProfileBehavior": {}
        },
        {
            "name": "Owner API",
            "item": [
                {
                    "name": "Check if terms of service is accepted",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "ce1d582f-9c80-4bad-958c-52bca9842554",
                                "exec": [
                                    "pm.test(\"Your test name\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.accepted).to.eql(false);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{access_token}}",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "localhost/owner/termsOfUse/accept/status",
                            "host": ["localhost"],
                            "path": ["owner", "termsOfUse", "accept", "status"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Accept terms of condition",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "c04c0c0b-2825-40fb-bc25-d0e1c002bb1c",
                                "exec": [
                                    "pm.test(\"Your test name\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.accepted).to.eql(true);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "url": {
                            "raw": "localhost/owner/termsOfUse/accept",
                            "host": ["localhost"],
                            "path": ["owner", "termsOfUse", "accept"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Check if terms of service is accepted after accepting",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "69329d7a-c556-4ec1-9235-3069cd20c51b",
                                "exec": [
                                    "pm.test(\"Your test name\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.accepted).to.eql(true);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "url": {
                            "raw": "localhost/owner/termsOfUse/accept/status",
                            "host": ["localhost"],
                            "path": ["owner", "termsOfUse", "accept", "status"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Check if terms of service is not accepted",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "8f3934e9-94b7-40c6-987c-741848e90fbf",
                                "exec": [
                                    "pm.test(\"Your test name\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.accepted).to.eql(false);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token_2}}"
                            }
                        ],
                        "url": {
                            "raw": "localhost/owner/termsOfUse/accept/status",
                            "host": ["localhost"],
                            "path": ["owner", "termsOfUse", "accept", "status"]
                        }
                    },
                    "response": []
                }
            ],
            "protocolProfileBehavior": {}
        },
        {
            "name": "Test Status",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "id": "5b69e2bf-8c73-4a65-9441-981b2ec8a4e7",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "localhost",
                    "host": ["localhost"]
                }
            },
            "response": []
        }
    ],
    "protocolProfileBehavior": {}
}
