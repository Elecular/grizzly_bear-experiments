{
    "info": {
        "_postman_id": "bd1c0437-a3f4-4f3e-9621-ee1657d3279b",
        "name": "experiments_acceptance_test",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "Projects API",
            "item": [
                {
                    "name": "Get Access Token For Test Client",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "58775a6e-21e2-4054-b68b-99b91922d477",
                                "exec": [
                                    "pm.environment.set(\"access_token\", pm.response.json()[\"access_token\"]);"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application/json",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"client_id\":\"8R7YBPp1RZHySEwxead6GQUwDcLFIHFI\",\"client_secret\":\"T_HItnlZg9N-fPtSWpF_nYpW4VvqbksQkt77oIy5TZ-fuhHGE34exdUpcZRLvya1\",\"audience\":\"http://www.grizzlybear-experiments.com\",\"grant_type\":\"client_credentials\"}"
                        },
                        "url": {
                            "raw": "https://grizzly-bear-dev.eu.auth0.com/oauth/token",
                            "protocol": "https",
                            "host": ["grizzly-bear-dev", "eu", "auth0", "com"],
                            "path": ["oauth", "token"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get Access Token For Test Client 2",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "c1dd7071-0bc2-40b4-b7ef-1fcdee617dad",
                                "exec": [
                                    "pm.environment.set(\"access_token_2\", pm.response.json()[\"access_token\"]);"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"client_id\":\"pDBt9PPrzQCGzOK3KLIGw3P3K4aGOsjB\",\"client_secret\":\"RH_TZ10o7ScOyq1yu12Mrr59F099SxkptwAJBjrhzCkNZe80HCy6eq4P0xw9bpBB\",\"audience\":\"http://www.grizzlybear-experiments.com\",\"grant_type\":\"client_credentials\"}"
                        },
                        "url": {
                            "raw": "https://grizzly-bear-dev.eu.auth0.com/oauth/token",
                            "protocol": "https",
                            "host": ["grizzly-bear-dev", "eu", "auth0", "com"],
                            "path": ["oauth", "token"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get Access Token For Admin App",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "3c191005-67a8-40de-b5e3-20bba5003b23",
                                "exec": [
                                    "pm.environment.set(\"admin_access_token\", pm.response.json()[\"access_token\"]);"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "type": "text",
                                "value": "application/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"client_id\":\"JznMEKtDXtLzsyEpJkPIs1LvHDd5FoZO\",\"client_secret\":\"UYSXMQ6xB7YKayJdARI4Af48DjUgKmhWQpvD0Pb3db7TElrEzjL8Bnmq_Sp3KiNJ\",\"audience\":\"http://www.grizzlybear-experiments.com\",\"grant_type\":\"client_credentials\"}"
                        },
                        "url": {
                            "raw": "https://grizzly-bear-dev.eu.auth0.com/oauth/token",
                            "protocol": "https",
                            "host": ["grizzly-bear-dev", "eu", "auth0", "com"],
                            "path": ["oauth", "token"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Project",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "bc96ec62-e872-4db5-b6ca-caf20b22f477",
                                "exec": [
                                    "pm.test(\"Status code is 201\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "pm.test(\"Body has id\", function() {",
                                    "    pm.expect(pm.response.json()).to.have.property('_id');",
                                    "});",
                                    "",
                                    "pm.environment.set(\"sampleProjectId\", pm.response.json()[\"_id\"]);"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{access_token}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\t\"projectName\": \"testProject\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects",
                            "host": ["localhost"],
                            "path": ["projects"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Project with another user",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "7f0f492a-366b-4eda-87c7-25e46a7639f5",
                                "exec": [
                                    "pm.test(\"Status code is 201\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "pm.test(\"Body has id\", function() {",
                                    "    pm.expect(pm.response.json()).to.have.property('_id');",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token_2}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\t\"projectName\": \"testProject\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects",
                            "host": ["localhost"],
                            "path": ["projects"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Project without project name",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "05514081-02ef-4f7f-b322-434f12586e61",
                                "exec": [
                                    "pm.test(\"Status code is 400\", function () {",
                                    "    pm.response.to.have.status(400);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects",
                            "host": ["localhost"],
                            "path": ["projects"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Private API: Get all projects under given ownerId",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "c472de30-71fb-4c55-abf2-e00bc7463e72",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Gets correct project\", function() {",
                                    "    pm.expect(pm.response.json()[0]._id).to.eql(pm.environment.get(\"sampleProjectId\"));",
                                    "",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "ownerid",
                                "type": "text",
                                "value": "xo509wTObnqcYKiOgLCJoLcHqSpFKCjL@clients",
                                "disabled": true
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost:8080/owners/8R7YBPp1RZHySEwxead6GQUwDcLFIHFI@clients/projects",
                            "host": ["localhost"],
                            "port": "8080",
                            "path": [
                                "owners",
                                "8R7YBPp1RZHySEwxead6GQUwDcLFIHFI@clients",
                                "projects"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Project with projectId",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "343d49b8-ad87-4745-93b9-9b353678d033",
                                "exec": [
                                    "pm.test(\"Status code is 201\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "pm.test(\"Body has id\", function() {",
                                    "    pm.expect(pm.response.json()).to.have.property('_id');",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\t\"projectName\": \"testProject\",\n\t\"projectId\": \"5e865ed82a2aeb6436f498dc\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects",
                            "host": ["localhost"],
                            "path": ["projects"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Project with duplicate project id",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "45ba4872-ce94-4649-908c-1b402597ed94",
                                "exec": [
                                    "pm.test(\"Status code is 409\", function () {",
                                    "    pm.response.to.have.status(409);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\t\"projectName\": \"testProject\",\n\t\"projectId\": \"5e865ed82a2aeb6436f498dc\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects",
                            "host": ["localhost"],
                            "path": ["projects"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Project with invalid project id",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "1fd79e60-79a1-4352-8b57-5fd4386b0771",
                                "exec": [
                                    "pm.test(\"Status code is 400\", function () {",
                                    "    pm.response.to.have.status(400);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\t\"projectName\": \"testProject\",\n\t\"projectId\": \"5e865ed82a2aeb6436f49\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects",
                            "host": ["localhost"],
                            "path": ["projects"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Another Project",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "0fbdbd78-b5f4-48b6-979e-22c88a0592f6",
                                "exec": [
                                    "pm.test(\"Status code is 201\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "pm.test(\"Body has id\", function() {",
                                    "    pm.expect(pm.response.json()).to.have.property('_id');",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{access_token}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\t\"projectName\": \"testProject\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects",
                            "host": ["localhost"],
                            "path": ["projects"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get All Projects",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "ee471a41-9032-46d4-9a6d-d2117eb3a5db",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Has two projects\", function () {",
                                    "    pm.expect(pm.response.json().length).to.equal(3)",
                                    "    pm.expect(pm.response.json()[0].ownerId).to.equal('8R7YBPp1RZHySEwxead6GQUwDcLFIHFI@clients')",
                                    "    pm.expect(pm.response.json()[1].ownerId).to.equal('8R7YBPp1RZHySEwxead6GQUwDcLFIHFI@clients')",
                                    "    pm.expect(pm.response.json()[2].ownerId).to.equal('8R7YBPp1RZHySEwxead6GQUwDcLFIHFI@clients')",
                                    "});",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects",
                            "host": ["localhost"],
                            "path": ["projects"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get All Projects As Admin",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "e27e2cbb-4e1f-4945-9ac4-8602cc054f1f",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Body has projects\", function() {",
                                    "    pm.expect(pm.response.json().length).to.equal(4)",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{admin_access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/admin/projects",
                            "host": ["localhost"],
                            "path": ["admin", "projects"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Cannot Get All Projects As Admin Without proper token",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "e6570b37-f852-4495-ac4a-f6c43a19cfc3",
                                "exec": [
                                    "pm.test(\"Status code is 403\", function () {",
                                    "    pm.response.to.have.status(403);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/admin/projects",
                            "host": ["localhost"],
                            "path": ["admin", "projects"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get Permissions of access token",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "25d879a9-0760-4a08-b13c-c5cb3a750ec6",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Body has scope\", function () {",
                                    "    pm.expect(pm.response.text()).to.include(\"admin.read:projects\");",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{admin_access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/owner/scope",
                            "host": ["localhost"],
                            "path": ["owner", "scope"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get All Owners As Admin",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "d351568d-1cce-418e-b12d-913dc73d46bb",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Body has projects\", function() {",
                                    "    pm.expect(pm.response.json().length).to.be.above(0)",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{admin_access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/admin/owners",
                            "host": ["localhost"],
                            "path": ["admin", "owners"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get All Owners As Admin Without Permission",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "fb5b7972-4f7d-4115-9584-466d4ff424f4",
                                "exec": [
                                    "pm.test(\"Status code is 403\", function () {",
                                    "    pm.response.to.have.status(403);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/admin/owners",
                            "host": ["localhost"],
                            "path": ["admin", "owners"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get Project Details As Admin",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "557ed1e7-c71a-4bc4-bce9-d725d03a7963",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Body has projects\", function() {",
                                    "    pm.expect(pm.response.json()._id).to.be.equal(pm.environment.get(\"sampleProjectId\"))",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{admin_access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/admin/project/{{sampleProjectId}}",
                            "host": ["localhost"],
                            "path": ["admin", "project", "{{sampleProjectId}}"]
                        }
                    },
                    "response": []
                }
            ],
            "protocolProfileBehavior": {}
        },
        {
            "name": "Experiments API",
            "item": [
                {
                    "name": "Create Project",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "8014220c-d62e-487e-819b-827ba68fe323",
                                "exec": [
                                    "pm.test(\"Status code is 201\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "pm.test(\"Body has id\", function() {",
                                    "    pm.expect(pm.response.json()).to.have.property('_id');",
                                    "});",
                                    "",
                                    "pm.environment.set(\"sampleProjectId\", pm.response.json()[\"_id\"]);"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{access_token}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\t\"projectName\": \"testProject\"\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects",
                            "host": ["localhost"],
                            "path": ["projects"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Experiment",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "f5219333-6612-456e-96ec-bd2cfbf979c8",
                                "exec": [
                                    "pm.test(\"Status code is 201\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "pm.test(\"Body has id\", function() {",
                                    "    pm.expect(pm.response.json()).to.have.property('_id');",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{access_token}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\t\"_id\": {\n\t\t\"projectId\": \"{{sampleProjectId}}\",\n\t\t\"experimentName\": \"exp1\"\n\t},\n\t\"startTime\": 1685473303000,\n\t\"variations\": [{\n\t\t\t\"variationName\": \"variation1\",\n\t\t\t\"normalizedTrafficAmount\": 0.1,\n\t\t\t\"variables\": [{\n\t\t\t\t\"variableName\": \"var1\",\n\t\t\t\t\"variableType\": \"String\",\n\t\t\t\t\"variableValue\": \"test\"\n\t\t\t}],\n\t\t\t\"controlGroup\": true\n\t\t}, {\n\t\t\t\"variationName\": \"variation2\",\n\t\t\t\"normalizedTrafficAmount\": 0.9,\n\t\t\t\"variables\": [{\n\t\t\t\t\"variableName\": \"var1\",\n\t\t\t\t\"variableType\": \"String\",\n\t\t\t\t\"variableValue\": \"test\"\n\t\t\t}],\n\t\t\t\"controlGroup\": false\n\t}]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects/{{sampleProjectId}}/experiments",
                            "host": ["localhost"],
                            "path": [
                                "projects",
                                "{{sampleProjectId}}",
                                "experiments"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Another Experiment",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "14e8bbeb-39bf-48e9-903d-256bc87ce4b3",
                                "exec": [
                                    "pm.test(\"Status code is 201\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});",
                                    "",
                                    "pm.test(\"Body has id\", function() {",
                                    "    pm.expect(pm.response.json()).to.have.property('_id');",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\t\"_id\": {\n\t\t\"projectId\": \"{{sampleProjectId}}\",\n\t\t\"experimentName\": \"exp2\"\n\t},\n\t\"startTime\": 1685474304000,\n\t\"endTime\": 1685474305000,\n\t\"variations\": [{\n\t\t\t\"variationName\": \"variation1\",\n\t\t\t\"normalizedTrafficAmount\": 0.1,\n\t\t\t\"variables\": [{\n\t\t\t\t\"variableName\": \"var1\",\n\t\t\t\t\"variableType\": \"String\",\n\t\t\t\t\"variableValue\": \"test\"\n\t\t\t}],\n\t\t\t\"controlGroup\": true\n\t\t}, {\n\t\t\t\"variationName\": \"variation2\",\n\t\t\t\"normalizedTrafficAmount\": 0.9,\n\t\t\t\"variables\": [{\n\t\t\t\t\"variableName\": \"var1\",\n\t\t\t\t\"variableType\": \"String\",\n\t\t\t\t\"variableValue\": \"test\"\n\t\t\t}],\n\t\t\t\"controlGroup\": false\n\t}]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects/{{sampleProjectId}}/experiments",
                            "host": ["localhost"],
                            "path": [
                                "projects",
                                "{{sampleProjectId}}",
                                "experiments"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Duplicate Experiment",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "49a86f9d-5e85-4c10-8bca-56b6a94c7074",
                                "exec": [
                                    "pm.test(\"Status code is 409\", function () {",
                                    "    pm.response.to.have.status(409);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\t\"_id\": {\n\t\t\"projectId\": \"{{sampleProjectId}}\",\n\t\t\"experimentName\": \"exp1\"\n\t},\n\t\"startTime\": 1685473303000,\n\t\"variations\": [{\n\t\t\t\"variationName\": \"variation1\",\n\t\t\t\"normalizedTrafficAmount\": 0.1,\n\t\t\t\"variables\": [{\n\t\t\t\t\"variableName\": \"var1\",\n\t\t\t\t\"variableType\": \"String\",\n\t\t\t\t\"variableValue\": \"test\"\n\t\t\t}],\n\t\t\t\"controlGroup\": true\n\t\t}, {\n\t\t\t\"variationName\": \"variation2\",\n\t\t\t\"normalizedTrafficAmount\": 0.9,\n\t\t\t\"variables\": [{\n\t\t\t\t\"variableName\": \"var1\",\n\t\t\t\t\"variableType\": \"String\",\n\t\t\t\t\"variableValue\": \"test\"\n\t\t\t}],\n\t\t\t\"controlGroup\": false\n\t}]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects/{{sampleProjectId}}/experiments",
                            "host": ["localhost"],
                            "path": [
                                "projects",
                                "{{sampleProjectId}}",
                                "experiments"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Experiment Without Permissions",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "3cedeea1-1f6c-44d9-b1a6-9086bf8fc32a",
                                "exec": [
                                    "pm.test(\"Status code is 403\", function () {",
                                    "    pm.response.to.have.status(403);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{access_token_2}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\t\"_id\": {\n\t\t\"projectId\": \"{{sampleProjectId}}\",\n\t\t\"experimentName\": \"exp1\"\n\t},\n\t\"startTime\": 1685473303000,\n\t\"variations\": [{\n\t\t\t\"variationName\": \"variation1\",\n\t\t\t\"normalizedTrafficAmount\": 0.1,\n\t\t\t\"variables\": [{\n\t\t\t\t\"variableName\": \"var1\",\n\t\t\t\t\"variableType\": \"String\",\n\t\t\t\t\"variableValue\": \"test\"\n\t\t\t}]\n\t\t}, {\n\t\t\t\"variationName\": \"variation2\",\n\t\t\t\"normalizedTrafficAmount\": 0.9,\n\t\t\t\"variables\": [{\n\t\t\t\t\"variableName\": \"var1\",\n\t\t\t\t\"variableType\": \"String\",\n\t\t\t\t\"variableValue\": \"test\"\n\t\t\t}]\n\t}]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects/{{sampleProjectId}}/experiments",
                            "host": ["localhost"],
                            "path": [
                                "projects",
                                "{{sampleProjectId}}",
                                "experiments"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Create Invalid experiment",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "9b814500-0ef7-4bfc-8e1b-b74aaf1b959f",
                                "exec": [
                                    "pm.test(\"Status code is 400\", function () {",
                                    "    pm.response.to.have.status(400);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\n\t\"_id\": {\n\t\t\"projectId\": \"{{sampleProjectId}}\",\n\t\t\"experimentName\": \"invalid-exp\"\n\t},\n\t\"variations\": [{\n\t\t\t\"variationName\": \"variation1\",\n\t\t\t\"normalizedTrafficAmount\": 0.1,\n\t\t\t\"variables\": [{\n\t\t\t\t\"variableName\": \"var1\",\n\t\t\t\t\"variableType\": \"String\",\n\t\t\t\t\"variableValue\": \"test\"\n\t\t\t}]\n\t\t}, {\n\t\t\t\"variationName\": \"variation2\",\n\t\t\t\"normalizedTrafficAmount\": 0.4,\n\t\t\t\"variables\": [{\n\t\t\t\t\"variableName\": \"var1\",\n\t\t\t\t\"variableType\": \"String\",\n\t\t\t\t\"variableValue\": \"test\"\n\t\t\t}]\n\t}]\n}",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects/{{sampleProjectId}}/experiments",
                            "host": ["localhost"],
                            "path": [
                                "projects",
                                "{{sampleProjectId}}",
                                "experiments"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get  experiment with given timerange",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "ec1c2259-e2b1-4e90-8090-a6a409bd3c86",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response has experiment\", function() {",
                                    "    pm.expect(pm.response.json().length).to.equal(1);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost:8080/bulk/experiments/?startTime=1685473303000&endTime=1685473306000",
                            "host": ["localhost"],
                            "port": "8080",
                            "path": ["bulk", "experiments", ""],
                            "query": [
                                {
                                    "key": "startTime",
                                    "value": "1685473303000"
                                },
                                {
                                    "key": "endTime",
                                    "value": "1685473306000"
                                }
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get User Variation",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "7d9e9c46-229f-42b9-a022-ccf8f1c369d8",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response has 3 elements\", function() {",
                                    "    pm.expect(pm.response.json().length).to.equal(3);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": "[{\n\t\"projectId\": \"{{sampleProjectId}}\",\n\t\"experimentName\": \"exp1\",\n\t\"userId\": \"24c9e15e52afc47c225b757e7bee1f9d\"\n}, {\n\t\"projectId\": \"{{sampleProjectId}}\",\n\t\"experimentName\": \"exp2\",\n\t\"userId\": \"24c9e15e52afc47c225b757e7bee1f9d\"\n}, {\n\t\"projectId\": \"{{sampleProjectId}}\",\n\t\"experimentName\": \"exp2\",\n\t\"userId\": \"f0b3b7623d3bedf898459673d778319e\"\n}]",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost:8080/bulk/variations",
                            "host": ["localhost"],
                            "port": "8080",
                            "path": ["bulk", "variations"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get  experiments with given projectId",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "f81b0bb4-4c25-4708-86aa-110a16c3caea",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Response has experiment\", function() {",
                                    "    pm.expect(pm.response.json().length).to.equal(2);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects/{{sampleProjectId}}/experiments",
                            "host": ["localhost"],
                            "path": [
                                "projects",
                                "{{sampleProjectId}}",
                                "experiments"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get  experiment invalid permissions",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "cc512228-27ab-461e-b5fa-913acf0b476f",
                                "exec": [
                                    "pm.test(\"Status code is 403\", function () {",
                                    "    pm.response.to.have.status(403);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{access_token_2}}",
                                "type": "text"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects/{{sampleProjectId}}/experiments",
                            "host": ["localhost"],
                            "path": [
                                "projects",
                                "{{sampleProjectId}}",
                                "experiments"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get  experiment with given projectId and Name",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "c9651e71-8098-4180-9775-57b7ae11ff0b",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Body has _id\", function() {",
                                    "    pm.expect(pm.response.json()[0]).to.have.property('_id');",
                                    "});",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects/{{sampleProjectId}}/experiments/exp1",
                            "host": ["localhost"],
                            "path": [
                                "projects",
                                "{{sampleProjectId}}",
                                "experiments",
                                "exp1"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get  variation with given project, Name and user id",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "ebccc345-9d2f-466d-811a-5cb094cc8426",
                                "exec": [
                                    "pm.test(\"Status code is 200\", function () {",
                                    "    pm.response.to.have.status(200);",
                                    "});",
                                    "",
                                    "pm.test(\"Body has variation name\", function() {",
                                    "    pm.expect(pm.response.json()).to.have.property('variationName');",
                                    "});",
                                    ""
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "protocolProfileBehavior": {
                        "disableBodyPruning": true
                    },
                    "request": {
                        "method": "GET",
                        "header": [],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects/{{sampleProjectId}}/experiments/exp1/variations?userId=test",
                            "host": ["localhost"],
                            "path": [
                                "projects",
                                "{{sampleProjectId}}",
                                "experiments",
                                "exp1",
                                "variations"
                            ],
                            "query": [
                                {
                                    "key": "userId",
                                    "value": "test"
                                }
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Stop  experiment with invalid credentials",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "bab0f593-19bb-40bb-b8c2-a4a440d16599",
                                "exec": [
                                    "pm.test(\"Status code is 403\", function () {",
                                    "    pm.response.to.have.status(403);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token_2}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects/{{sampleProjectId}}/experiments/exp1/stop",
                            "host": ["localhost"],
                            "path": [
                                "projects",
                                "{{sampleProjectId}}",
                                "experiments",
                                "exp1",
                                "stop"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Stop  experiment that does not exist",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "b6791c46-ea4e-46be-8df4-a1310792e1a5",
                                "exec": [
                                    "pm.test(\"Status code is 404\", function () {",
                                    "    pm.response.to.have.status(404);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects/{{sampleProjectId}}/experiments/invalid_exp1/stop",
                            "host": ["localhost"],
                            "path": [
                                "projects",
                                "{{sampleProjectId}}",
                                "experiments",
                                "invalid_exp1",
                                "stop"
                            ]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Stop  experiment with given projectId and Name",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "1b59969c-d6c6-4f93-83b3-9c5d1bd2c451",
                                "exec": [
                                    "pm.test(\"Status code is 201\", function () {",
                                    "    pm.response.to.have.status(201);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "",
                            "options": {
                                "raw": {
                                    "language": "json"
                                }
                            }
                        },
                        "url": {
                            "raw": "localhost/projects/{{sampleProjectId}}/experiments/exp1/stop",
                            "host": ["localhost"],
                            "path": [
                                "projects",
                                "{{sampleProjectId}}",
                                "experiments",
                                "exp1",
                                "stop"
                            ]
                        }
                    },
                    "response": []
                }
            ],
            "protocolProfileBehavior": {}
        },
        {
            "name": "Owner API",
            "item": [
                {
                    "name": "Check if terms of service is accepted",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "6a078c45-0c1f-45c9-a44d-506811f5c6a3",
                                "exec": [
                                    "pm.test(\"Your test name\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.accepted).to.eql(false);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "value": "Bearer {{access_token}}",
                                "type": "text"
                            }
                        ],
                        "url": {
                            "raw": "localhost/owner/termsOfUse/accept/status",
                            "host": ["localhost"],
                            "path": ["owner", "termsOfUse", "accept", "status"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Accept terms of condition",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "6548fed7-cb47-46e7-9300-df6dd17be434",
                                "exec": [
                                    "pm.test(\"Your test name\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.accepted).to.eql(true);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "POST",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "url": {
                            "raw": "localhost/owner/termsOfUse/accept",
                            "host": ["localhost"],
                            "path": ["owner", "termsOfUse", "accept"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Check if terms of service is accepted after accepting",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "be29b646-846f-4ce5-afa1-e20fcdbde063",
                                "exec": [
                                    "pm.test(\"Your test name\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.accepted).to.eql(true);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token}}"
                            }
                        ],
                        "url": {
                            "raw": "localhost/owner/termsOfUse/accept/status",
                            "host": ["localhost"],
                            "path": ["owner", "termsOfUse", "accept", "status"]
                        }
                    },
                    "response": []
                },
                {
                    "name": "Check if terms of service is not accepted",
                    "event": [
                        {
                            "listen": "test",
                            "script": {
                                "id": "69dc965d-b4c6-4f26-b37e-ed86c8e8f6df",
                                "exec": [
                                    "pm.test(\"Your test name\", function () {",
                                    "    var jsonData = pm.response.json();",
                                    "    pm.expect(jsonData.accepted).to.eql(false);",
                                    "});"
                                ],
                                "type": "text/javascript"
                            }
                        }
                    ],
                    "request": {
                        "method": "GET",
                        "header": [
                            {
                                "key": "Authorization",
                                "type": "text",
                                "value": "Bearer {{access_token_2}}"
                            }
                        ],
                        "url": {
                            "raw": "localhost/owner/termsOfUse/accept/status",
                            "host": ["localhost"],
                            "path": ["owner", "termsOfUse", "accept", "status"]
                        }
                    },
                    "response": []
                }
            ],
            "protocolProfileBehavior": {}
        },
        {
            "name": "Test Status",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "id": "63baa9a2-80e4-4b9b-8bb4-f54649b9eae6",
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "localhost",
                    "host": ["localhost"]
                }
            },
            "response": []
        }
    ],
    "protocolProfileBehavior": {}
}
